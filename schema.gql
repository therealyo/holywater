# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Content {
  """Primary id field for content"""
  id: ID!

  """Content Title"""
  title: String!

  """Content URL"""
  url: String!

  """Queried content version"""
  version: Int!

  """Creation date of version"""
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ContentVersion {
  """Queried content version"""
  version: Int!

  """Creation date of version"""
  createdAt: DateTime!
}

type PageInfo {
  nextCursor: DateTime
  hasNextPage: Boolean!
}

type Comment {
  """Comment ID"""
  id: ID!

  """Related content ID"""
  contentId: String!

  """User Id"""
  userId: String!
  text: String!
  createdAt: DateTime!
}

type PaginatedComments {
  items: [Comment!]!
  total: Int!
  pageInfo: PageInfo!
}

type Query {
  getContentVersions(skip: Int = 0, limit: Int = 10, id: ID!): [ContentVersion!]!
  content(id: ID!, version: Int): Content!
  comments(limit: Int! = 10, cursor: DateTime, contentId: String!): PaginatedComments!
}

type Mutation {
  createContent(createContentInput: CreateContentInput!): Content!
  updateContent(updateContentInput: UpdateContentInput!): Content!
  createComment(createCommentInput: CreateCommentInput!): Comment!
}

input CreateContentInput {
  """Content Title"""
  title: String!

  """Input for the content."""
  content: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateContentInput {
  """Content Title"""
  title: String!

  """Input for the content."""
  content: Upload!
  id: ID!
}

input CreateCommentInput {
  """Related content id"""
  contentId: String!

  """Comment"""
  text: String!
}